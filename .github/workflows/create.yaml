name: Create NXOntology
on:
  # schedule:
  # # https://crontab.guru/#05_11_*_*_2
  # - cron: '05 11 * * 2'
  workflow_dispatch:
    inputs:
      source:
        type: choice
        description: 'Which data source to generate.'
        options: 
        - mesh
        - pubchem
        - test  # for testing this action
      overwrite:
        type: boolean
        description: 'Overwrite output on an existing branch.'
        default: false
permissions: write-all
jobs:
  create-runner:
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.create-runner.outputs.label }}
    steps:
      - id: create-runner
        uses: related-sciences/gce-github-runner@main
        with:
          token: ${{ secrets.GH_SA_TOKEN }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          runner_service_account: ${{ secrets.GCP_SA }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          machine_type: n2-highmem-8
          image_project: ubuntu-os-cloud
          image_family: ubuntu-2004-lts
          ephemeral: true
          no_external_address: true

  export:
    needs: create-runner
    runs-on: ${{ needs.create-runner.outputs.label }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup dependencies
      uses: ./.github/actions/setup
    - name: Set parameters
      id: params
      shell: bash
      run: |
        OUTPUT_PATH="output/${{ github.event.inputs.source }}"
        echo "Setting parameter output_path=$OUTPUT_PATH"
        echo "output_path=$OUTPUT_PATH" >> $GITHUB_OUTPUT
        OUTPUT_EXISTS="true"
        git ls-remote --exit-code origin $OUTPUT_PATH || OUTPUT_EXISTS="false"
        echo "$OUTPUT_PATH branch exists on origin: $OUTPUT_EXISTS"
        echo "output_exists=$OUTPUT_EXISTS" >> $GITHUB_OUTPUT
        OVERWRITE=${{ github.event.inputs.overwrite || 'false' }}
        echo "Setting parameter overwrite=$OVERWRITE"
        echo "overwrite=$OVERWRITE" >> $GITHUB_OUTPUT
        EXPORT="false"
        if [[ $OUTPUT_EXISTS = "false" || $OVERWRITE = "true" ]]; then
          EXPORT="true"
        fi
        echo "Setting parameter export=$EXPORT"
        echo "export=$EXPORT" >> $GITHUB_OUTPUT
    - name: Create output
      id: extract
      if: steps.params.outputs.export == 'true'
      run: poetry run nxontology_data ${{ github.event.inputs.source }}
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: steps.params.outputs.export == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: ${{ steps.params.outputs.output_path }}
        publish_dir: ./${{ steps.params.outputs.output_path }}
        # Won't actually enable jekyll because we're not using GitHub Pages.
        # https://github.com/peaceiris/actions-gh-pages/issues/660
        enable_jekyll: true
    - name: Stop GCE runner
      if: always()
      uses: related-sciences/gce-github-runner@main
      with:
        command: stop
